index 76c377d..cd50d61 100644
--- a/libuci.c
+++ b/libuci.c
@@ -90,6 +90,11 @@ void tlt_log_event(const char *config, const char *user) {
 
 /* exported functions */
 struct uci_context *uci_alloc_context(void)
+{
+	return uci_alloc_context_ex(NULL, NULL);
+}
+
+struct uci_context *uci_alloc_context_ex(const char *confdir, const char *savedir)
 {
 	struct uci_context *ctx;
 
@@ -102,9 +107,18 @@ struct uci_context *uci_alloc_context(void)
 	uci_list_init(&ctx->backends);
 	ctx->flags = UCI_FLAG_STRICT | UCI_FLAG_SAVED_DELTA;
 
-	ctx->confdir = (char *) uci_confdir;
-	ctx->savedir = (char *) uci_savedir;
-	uci_add_delta_path(ctx, uci_savedir);
+	if (confdir) {
+		ctx->confdir = uci_strdup(ctx, confdir);
+	} else {
+		ctx->confdir = (char *) uci_confdir;
+	}
+
+	if (savedir) {
+		ctx->savedir = uci_strdup(ctx, savedir);
+	} else {
+		ctx->savedir = (char *) uci_savedir;
+	}
+	uci_add_delta_path(ctx, ctx->savedir);
 
 	uci_list_add(&ctx->backends, &uci_file_backend.e.list);
 	ctx->backend = &uci_file_backend;
index 3eea421..4c8c513 100644
--- a/lua/uci.c
+++ b/lua/uci.c
@@ -1021,23 +1021,30 @@ uci_lua_cursor(lua_State *L)
 	luaL_getmetatable(L, METANAME);
 	lua_setmetatable(L, -2);
 
-	*u = uci_alloc_context();
-	if (!*u)
-		return luaL_error(L, "Cannot allocate UCI context");
+	const char *confdir = NULL;
+	const char *savedir = NULL;
+
 	switch (argc) {
 		case 2:
-			if (lua_isstring(L, 2) &&
-				(uci_set_savedir(*u, luaL_checkstring(L, 2)) != UCI_OK))
+			if (!lua_isstring(L, 2)) {
 				return luaL_error(L, "Unable to set savedir");
+			}
+			savedir = luaL_checkstring(L, 2);
 			/* fall through */
 		case 1:
-			if (lua_isstring(L, 1) &&
-				(uci_set_confdir(*u, luaL_checkstring(L, 1)) != UCI_OK))
+			if (!lua_isstring(L, 1)) {
 				return luaL_error(L, "Unable to set confdir");
+			}
+			confdir = luaL_checkstring(L, 1);
 			break;
 		default:
 			break;
 	}
+
+	*u = uci_alloc_context_ex(confdir, savedir);
+	if (!*u)
+		return luaL_error(L, "Cannot allocate UCI context");
+
 	return 1;
 }
 
index 943d2b7..4968a79 100644
--- a/uci.h
+++ b/uci.h
@@ -78,6 +78,13 @@ struct uci_parse_context;
  */
 extern struct uci_context *uci_alloc_context(void);
 
+/**
+ * uci_alloc_context: Allocate a new uci context
+ * @confdir: config commit directory, passing NULL will use default
+ * @savedir: directory for saving changes which haven't been commited, passing NULL will use default
+ */
+extern struct uci_context *uci_alloc_context_ex(const char *confdir, const char *savedir);
+
 /**
  * uci_free_context: Free the uci context including all of its data
  */
