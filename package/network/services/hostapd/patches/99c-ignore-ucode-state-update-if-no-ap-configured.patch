--- a/wpa_supplicant/ucode.c
+++ b/wpa_supplicant/ucode.c
@@ -142,6 +142,7 @@ uc_wpas_add_iface(uc_vm_t *vm, size_t na
 	uc_value_t *bridge = ucv_object_get(info, "bridge", NULL);
 	uc_value_t *config = ucv_object_get(info, "config", NULL);
 	uc_value_t *ctrl = ucv_object_get(info, "ctrl", NULL);
+	uc_value_t *has_ap = ucv_object_get(info, "has_ap", NULL);
 	struct wpa_interface iface;
 	int ret = -1;
 
@@ -154,6 +155,7 @@ uc_wpas_add_iface(uc_vm_t *vm, size_t na
 		.bridge_ifname = ucv_string_get(bridge),
 		.confname = ucv_string_get(config),
 		.ctrl_interface = ucv_string_get(ctrl),
+		.has_ap = ucv_boolean_get(has_ap),
 	};
 
 	if (driver) {
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -1272,8 +1272,9 @@ void wpa_supplicant_set_state(struct wpa
 	}
 	wpa_s->wpa_state = state;
 
-	if (!(old_state == WPA_AUTHENTICATING && state == WPA_ASSOCIATING))
-		wpas_ucode_update_state(wpa_s);
+	if (!(old_state == WPA_AUTHENTICATING && state == WPA_ASSOCIATING) && 
+		wpa_s->ap_exists)
+			wpas_ucode_update_state(wpa_s);
 
 #ifdef CONFIG_BGSCAN
 	if (state == WPA_COMPLETED && wpa_s->current_ssid != wpa_s->bgscan_ssid)
@@ -8228,6 +8229,8 @@ struct wpa_supplicant * wpa_supplicant_a
 	wpa_s->next = global->ifaces;
 	global->ifaces = wpa_s;
 
+	wpa_s->ap_exists = iface->has_ap;
+
 	wpa_dbg(wpa_s, MSG_DEBUG, "Added interface %s", wpa_s->ifname);
 	wpa_supplicant_set_state(wpa_s, WPA_DISCONNECTED);
 
--- a/wpa_supplicant/wpa_supplicant_i.h
+++ b/wpa_supplicant/wpa_supplicant_i.h
@@ -137,6 +137,8 @@ struct wpa_interface {
 		WPA_IFACE_MATCHED
 	} matched;
 #endif /* CONFIG_MATCH_IFACE */
+
+	bool has_ap;
 };
 
 /**
@@ -702,6 +704,7 @@ struct wpa_supplicant {
 	char ifname[100];
 	struct wpas_ubus_bss ubus;
 	struct wpas_ucode_bss ucode;
+	bool ap_exists;
 #ifdef CONFIG_MATCH_IFACE
 	int matched;
 #endif /* CONFIG_MATCH_IFACE */
