Index: xl2tpd6-1.3.17/file.c
===================================================================
--- xl2tpd6-1.3.17.orig/file.c
+++ xl2tpd6-1.3.17/file.c
@@ -29,7 +29,7 @@
 #include <time.h>
 #include <sys/types.h>
 #include <sys/socket.h>
-
+#include <arpa/inet.h>
 #include "l2tp.h"
 
 struct lns *lnslist;
@@ -1161,6 +1161,11 @@ int set_remoteaddr (char *word, char *va
     return 0;
 }
 
+int is_ipv6(const char *ip) {
+    struct in6_addr addr6;
+    return inet_pton(AF_INET6, ip, &addr6) == 1;
+}
+
 int set_lns (char *word, char *value, int context, void *item)
 {
 #if 0
@@ -1169,19 +1174,42 @@ int set_lns (char *word, char *value, in
     struct lac *l;
     struct host *ipr, *pos;
     char *d;
+    char *ip6 = NULL;
     switch (context & ~CONTEXT_DEFAULT)
     {
     case CONTEXT_LAC:
 #ifdef DEBUG_FILE
         l2tp_log (LOG_DEBUG, "set_lns: setting LNS to '%s'\n", value);
 #endif
-        l = (struct lac *) item;
-        d = strchr (value, ':');
-        if (d)
-        {
-            d[0] = 0;
-            d++;
-        }
+        if (!is_ipv6(value)) {
+	    if (value[0] == '[')
+            {
+                char *end_bracket = strchr(value, ']');
+		if (end_bracket && *(end_bracket + 1) == ':')
+		{
+		    *end_bracket = '\0';
+		    ip6 = value + 1;
+		    d = end_bracket + 2;
+		}
+		else
+		{
+		    l2tp_log(LOG_WARNING, "Invalid ipv6 address format: '%s'\n", value);
+		    return -1;
+		}
+	    }
+	    else
+	    {
+                l = (struct lac *) item;
+                d = strchr (value, ':');
+                if (d)
+                {
+                    d[0] = 0;
+                    d++;
+                }
+	    }
+        } else {
+            d = NULL;
+	}
 #if 0 
 		// why would you want to lookup hostnames at this time? 
         hp = gethostbyname (value);
@@ -1204,7 +1232,7 @@ int set_lns (char *word, char *value, in
                 pos = pos->next;
             pos->next = ipr;
         }
-        strncpy (ipr->hostname, value, sizeof (ipr->hostname));
+        strncpy(ipr->hostname, ip6 ? ip6 : value, sizeof(ipr->hostname));
         if (d)
             ipr->port = atoi (d);
         else
