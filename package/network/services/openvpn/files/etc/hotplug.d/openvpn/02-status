#!/bin/sh
. /usr/share/libubox/jshn.sh

INSTANCE=$(echo "$config" | cut -d"-" -f2 | cut -d"." -f1)
TYPE=$(uci get openvpn."$INSTANCE".type)
STATUS_FILE="/var/run/openvpn/openvpn-$INSTANCE.info"
DNSMASQ_RELOAD=0

create_status_file() {
	json_init
	json_add_string "name" "$INSTANCE"
	json_add_string "ip" "$ifconfig_local"
	json_add_string "ipv6" "$ifconfig_ipv6_local"
	[ "$TYPE" = "client" ] && {
		json_add_string "ip_remote" "$ifconfig_remote"
		json_add_string "ipv6_remote" "$ifconfig_ipv6_remote"
	}
	json_add_string "time" "$(awk '{print $1}' /proc/uptime)"
	json_dump > "$STATUS_FILE"
	chown openvpn:openvpn "$STATUS_FILE"
}

case $ACTION in
	up)
		create_status_file
		[ "$TYPE" = "client" ] && {
			dns=$(env | sed -n -e "
			/^foreign_option_.*=dhcp-option.*DNS /s//server=/p
			/^foreign_option_.*=dhcp-option.*DOMAIN /s//domain=/p
			" | sort -u)
			if [ -n "$dns" ]; then
				{
					echo "$dns"
					echo "$dns" | grep -q "server=" && echo "strict-order"
				} >> /tmp/dnsmasq.d/$dev.dns
				chown openvpn:dnsmasq /tmp/dnsmasq.d/$dev.dns
				DNSMASQ_RELOAD=1
			fi
			{ sleep 3 && sh /etc/openvpn/ping.sh; } &
		}
		;;
	down)
		[ "$TYPE" = "client" ] && [ -f "/tmp/dnsmasq.d/$dev.dns" ] && rm /tmp/dnsmasq.d/$dev.dns 2> /dev/null && DNSMASQ_RELOAD=1
		rm "$STATUS_FILE" 2> /dev/null
		;;
esac
[ "$TYPE" = "client" ] && [ "$DNSMASQ_RELOAD" = "1" ] && ubus call rc init '{"action": "reload", "name": "dnsmasq"}' &

exit 0
