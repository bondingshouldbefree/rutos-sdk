#!/sbin/openrc-run

pidfile="/run/${RC_SVCNAME}.pid"
command="/usr/sbin/dropbear"
command_background="yes"
command_args="-F -P ${pidfile} -p 22 -I 1800 -K 300 -T 3"
supervisor=supervise-daemon
respawn_delay=1
respawn_max=0
extra_commands="killclients"

depend() {
	need network
}

_dropbearkey()
{
	/usr/bin/dropbearkey "$@" 0<&- 1>&- 2>&-
}

# $1 - host key file name
hk_verify()
{
	[ -f "$1" ] || return 1
	[ -s "$1" ] || return 2
	_dropbearkey -y -f "$1" || return 3
	return 0
}

hk_generate_as_needed()
{
	local kdir kgen ktype tdir kcount tfile
	kdir='/etc/dropbear'

	kgen=''
	for ktype in ed25519 ecdsa; do
		hk_verify "${kdir}/dropbear_${ktype}_host_key" && continue

		kgen="${kgen} ${ktype}"
	done

	[ -z "${kgen}" ] && return

	tdir=$(mktemp -d); chmod 0700 "${tdir}"

	kcount=0
	for ktype in ${kgen}; do
		tfile="${tdir}/dropbear_${ktype}_host_key"

		if ! _dropbearkey -t ${ktype} -f "${tfile}"; then
			# unsupported key type
			rm -f "${tfile}"
			continue
		fi

		kcount=$((kcount+1))
	done

	if [ ${kcount} -ne 0 ]; then
		mkdir -p "${kdir}"; chmod 0700 "${kdir}"; chown root "${kdir}"
		mv -f "${tdir}/"* "${kdir}/"
	fi

	rm -rf "${tdir}"
}

start_pre()
{
	hk_generate_as_needed
}

killclients()
{
	local ignore=''
	local server
	local pid

	# if this script is run from inside a client session, then ignore that session
	pid="$$"
	while [ "${pid}" -ne 0 ]
	 do
		# get parent process id
		pid=$(cut -d ' ' -f 4 "/proc/${pid}/stat")
		[ "${pid}" -eq 0 ] && break

		# check if client connection
		grep -F -q -e "${PROG}" "/proc/${pid}/cmdline" && {
			append ignore "${pid}"
			break
		}
	done

	# get all server pids that should be ignored
	for server in $(cat /var/run/${NAME}.*.pid)
	 do
		append ignore "${server}"
	done

	# get all running pids and kill client connections
	local skip
	for pid in $(pidof "${NAME}")
	 do
		# check if correct program, otherwise process next pid
		grep -F -q -e "${PROG}" "/proc/${pid}/cmdline" || {
			continue
		}

		# check if pid should be ignored (servers, ourself)
		skip=0
		for server in ${ignore}
		 do
			if [ "${pid}" = "${server}" ]
			 then
				skip=1
				break
			fi
		done
		[ "${skip}" -ne 0 ] && continue

		# kill process
		echo "${initscript}: Killing ${pid}..."
		kill -KILL ${pid}
	done
}
