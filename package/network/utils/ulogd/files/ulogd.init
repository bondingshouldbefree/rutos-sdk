#!/bin/sh /etc/rc.common
# Copyright (C) 2014 OpenWrt.org

START=20

USE_PROCD=1
HOME_DIR=/var/run/ulogd
CONF_FILE=${HOME_DIR}/ulogd.conf
PLUGIN_DIR=/usr/lib/ulogd/
UNDO_FILE=${HOME_DIR}/ulogd_firewall.sh
CRONTABS_FILE=/etc/crontabs/ulogd
PROG=/usr/sbin/ulogd
SET_HOTSPOT=0

if [ ! -d "$PLUGIN_DIR" ]; then
	PLUGIN_DIR=/usr/local$PLUGIN_DIR
fi

ipt() {
	local opt=$1; shift
	echo "iptables -D $*" >> $UNDO_FILE
	iptables $opt $*
}

ipt6() {
	local opt=$1; shift
	echo "ip6tables -D $*" >> $UNDO_FILE
	ip6tables $opt $*
}

undo_firewall() {
	[ -e "$UNDO_FILE" ] || return
	{
		iptables -F LOGGING
		ip6tables -F LOGGING
		sh ${UNDO_FILE}
		iptables -X LOGGING
		ip6tables -X LOGGING
	} 2>/dev/null
}

add_logging_rule() {
	local ifname

	[[ "$1" == "hotspot" ]] && {
		SET_HOTSPOT=1
		return
	}

	network_get_device ifname "$1"
	[[ -n "$ifname" ]] && \
		ipt -I forwarding_rule -i $ifname -p tcp -m multiport --dports 80,443 -j LOGGING
		ipt6 -I forwarding_rule -i $ifname -p tcp -m multiport --dports 80,443 -j LOGGING
}

add_hotspot_config_moreif() {
	eval "$2=\"\$$2 $1\""
}

add_hotspot_config_network() {
	local sec="$1"

	config_get enabled "$sec" enabled 0
	[ "$enabled" -ne 1 ] && return

	config_get network "$sec" network ""
	[ -z "$network" ] && return

	eval "$2=\"\$$2 $network\""

	config_list_foreach "$sec" "moreif" add_hotspot_config_moreif "$2"
}

get_interface() {
	local var=""
	local net="$2"

	if [ "$(echo "$1" | grep -c "wifi")" ]; then
		. /etc/chilli/wireless.sh
		wireless_get_ifname var "$net"
		[ -z "$var" ] && var=$(cat /var/run/"${net}".wifi_id 2>/dev/null)
	else
		network_get_device var "$net"
	fi

	[ -n "$var" ] && eval "$1=\"$var\"" || unset "$1"
}

set_firewall() {
	. /lib/functions/network.sh

	undo_firewall
	ipt -N LOGGING
	ipt -A LOGGING -m conntrack --ctstate NEW -j NFLOG --nflog-group 1
	ipt6 -N LOGGING
	ipt6 -A LOGGING -m conntrack --ctstate NEW -j NFLOG --nflog-group 1
	config_list_foreach global network add_logging_rule

	[ "$SET_HOTSPOT" -ne 1 ] && return # Skip hotspot setting if not configured

	# Set hotspot logging
	local hs_ifaces=""
	config_load chilli
	config_foreach add_hotspot_config_network chilli hs_ifaces
	hs_ifaces=$(echo "$hs_ifaces" | \
		    awk '{for (i=1; i<=NF; i++) if (!seen[$i]++) printf "%s ", $i}')
	for hs_iface in $hs_ifaces; do
		get_interface iface "$hs_iface"
		[ -z "$iface" ] && continue
		for if in $iface; do
			ipt -N LOGGING
			ipt -I FORWARD -i "$if" -p tcp -m multiport --dports 80,443 -j LOGGING
		done
	done
	config_load ulogd
}

set_ftp() {
	local fixed minutes hours weekday intervar enabled
	local sid="$1"
	local ftp_upload_script="/sbin/ftp_upload.sh"

	if [ ! -x "$ftp_upload_script" ]; then
		ftp_upload_script="/usr/local$ftp_upload_script"
	fi

	config_get enabled ftp enabled 1
	[ $enabled -ne 1 ] && return 1

	config_get host "$sid" host ""
	[ -z "$host" ] && return 1

	config_get fixed "$sid" fixed 0
	config_get minutes "$sid" minutes 0
	config_get hours "$sid" hours 0
	config_get weekday "$sid" weekdays "*"
	config_get interval "$sid" interval_time 1

	weekday=${weekday// /,}

	if [ "$fixed" -eq "0" ]; then
		minutes=0
		[[ "$interval" -ge "24" ]] && hours="1" || hours="*/$interval"
	else
		#Fixed times once a day
		minutes=$minutes
		[ $hours -gt "23" ] && hours="0"

		hours=$hours
	fi

	echo "${minutes:-0} ${hours:-0} * * ${weekday:-*} sh "$ftp_upload_script"" \
		>> "$CRONTABS_FILE"
	/etc/init.d/cron reload
}

set_conf_sec() {
	echo "[$1]" >> $CONF_FILE
}

set_conf() {
	echo "$1=$2" >> "$CONF_FILE"
}

set_conf_str() {
	set_conf "$1" "\"$2\""
}

rm_config() {
	rm -f $CONF_FILE
	rm -f "$CRONTABS_FILE"
}

config_cb() {
	local ulog_inst="$2"

	case "$1" in
		ulogd|log|emu)
			option_cb() {
				set_ulogd $*
			}
			list_cb() {
				set_ulogd_list $1 $2
			}
			set_conf_sec $2
			;;
		*)
			option_cb() {
				return;
			}
			list_cb() {
				return
			}
			return 0
			;;
	esac
}

set_ulogd() {
	local option=$1 value=$2
	case "$1" in
		enabled)
			[ "$2" = "1" ] && eval "start_chilli_$CONFIG_SECTION=1"
			;;
		_*)
			;;
		*)
			set_conf_str $@
			;;
	esac
}

set_ulogd_list() {
	local option=$1 value=$2

	case "$1" in
		plugin)
			set_conf_str "$option" "$PLUGIN_DIR$value"
			;;
		_*)
			;;
		*)
			set_conf_str $@
			;;
	esac
}

add_interface_trigger() {
	[ "$1" != "hotspot" ] && procd_add_interface_trigger "interface.*" "$1" /etc/init.d/ulogd reload
}

service_triggers() {
	procd_add_reload_trigger "ulogd"
	[ "$SET_HOTSPOT" -eq 1 ] && procd_add_reload_trigger "chilli"

	NO_CALLBACK=1
	config_load ulogd
	config_list_foreach global network add_interface_trigger
}

start_service() {
	local enabled

	enabled=$(uci -q get ulogd.global.enabled)
	[ "$enabled" == "1" ] || return 0

	rm_config

	unset NO_CALLBACK
	config_load ulogd
	set_firewall
	set_ftp ftp

	if [ ! -x "$PROG" ]; then
		PROG="/usr/local$PROG"
	fi

	procd_open_instance
	procd_set_param command "$PROG"
	procd_append_param command --configfile "$CONF_FILE"
	procd_set_param user ulogd
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_close_instance
}


reload_service() {
	stop
	start
}

stop_service() {
	rm_config
	undo_firewall
}
