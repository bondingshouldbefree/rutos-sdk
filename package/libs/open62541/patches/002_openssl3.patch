diff --git a/plugins/crypto/openssl/ua_openssl_create_certificate.c b/plugins/crypto/openssl/ua_openssl_create_certificate.c
index 0bea05ee3..d20c0b8a4 100644
--- a/plugins/crypto/openssl/ua_openssl_create_certificate.c
+++ b/plugins/crypto/openssl/ua_openssl_create_certificate.c
@@ -17,6 +17,7 @@
 
 #include <openssl/pem.h>
 #include <openssl/x509v3.h>
+#include <openssl/rsa.h>
 #include <openssl/err.h>
 
 /**
@@ -101,7 +102,30 @@ add_x509V3ext(const UA_Logger *logger, X509 *x509, int nid, char *value) {
 /* generate the RSA key */
 
 static EVP_PKEY * UA_RSA_Generate_Key (size_t keySizeBits){
-    return EVP_RSA_gen(keySizeBits);
+    EVP_PKEY *pkey = NULL;
+
+    EVP_PKEY_CTX *ctx = EVP_PKEY_CTX_new_id(EVP_PKEY_RSA, NULL);
+    if (!ctx) {
+        goto cleanup;
+    }
+
+    if (EVP_PKEY_keygen_init(ctx) <= 0) {
+        goto cleanup;
+    }
+
+    if (EVP_PKEY_CTX_set_rsa_keygen_bits(ctx, keySizeBits) <= 0) {
+        goto cleanup;
+    }
+
+    if (EVP_PKEY_keygen(ctx, &pkey) <= 0) {
+        goto cleanup;
+    }
+
+cleanup:
+    if (ctx) {
+        EVP_PKEY_CTX_free(ctx);
+    }
+    return pkey;
 }
 
 #endif
@@ -209,14 +233,14 @@ UA_CreateCertificate(const UA_Logger *logger, const UA_String *subject,
         goto cleanup;
     }
 
-    if(X509_gmtime_adj(X509_get_notBefore(x509), 0) == NULL) {
+    if(X509_gmtime_adj(X509_getm_notBefore(x509), 0) == NULL) {
         UA_LOG_ERROR(logger, UA_LOGCATEGORY_SECURECHANNEL,
                      "Create Certificate: Setting 'not before' failed.");
         errRet = UA_STATUSCODE_BADINTERNALERROR;
         goto cleanup;
     }
 
-    if(X509_gmtime_adj(X509_get_notAfter(x509), (UA_Int64)60 * 60 * 24 * expiresInDays) ==
+    if(X509_gmtime_adj(X509_getm_notAfter(x509), (UA_Int64)60 * 60 * 24 * expiresInDays) ==
        NULL) {
         UA_LOG_ERROR(logger, UA_LOGCATEGORY_SECURECHANNEL,
                      "Create Certificate: Setting 'not before' failed.");
diff --git a/plugins/crypto/openssl/ua_pki_openssl.c b/plugins/crypto/openssl/ua_pki_openssl.c
index 6289f45ca..c7f388af9 100644
--- a/plugins/crypto/openssl/ua_pki_openssl.c
+++ b/plugins/crypto/openssl/ua_pki_openssl.c
@@ -540,8 +540,11 @@ UA_CertificateVerification_Verify (const UA_CertificateVerification *cv,
             X509_STORE_set_flags(store, 0);
             X509_STORE_CTX_init (storeCtx, store, certificateX509,ctx->skIssue);
 
-            /* Set trust list to ctx */
-            (void) X509_STORE_CTX_trusted_stack (storeCtx, ctx->skTrusted);
+#if defined(OPENSSL_API_COMPAT) && OPENSSL_API_COMPAT < 0x10100000L
+           (void) X509_STORE_CTX_trusted_stack (storeCtx, ctx->skTrusted);
+#else
+           (void) X509_STORE_CTX_set0_trusted_stack (storeCtx, ctx->skTrusted);
+#endif
 
             /* Set crls to ctx */
             X509_STORE_CTX_set0_crls (storeCtx, ctx->skCrls);
@@ -684,7 +687,7 @@ UA_GetCertificate_ExpirationDate(UA_DateTime *expiryDateTime,
     }
 
     /* Get the certificate Expiry date */
-    ASN1_TIME *not_after = X509_get_notAfter(x509);
+    ASN1_TIME *not_after = X509_getm_notAfter(x509);
 
     struct tm dtTime;
     ASN1_TIME_to_tm(not_after, &dtTime);
