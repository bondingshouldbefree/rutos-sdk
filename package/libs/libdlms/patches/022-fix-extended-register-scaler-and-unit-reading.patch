From e476596466c852c62d912518f5a5a0bedd3e1f97 Mon Sep 17 00:00:00 2001
From: Kristupas Trakselis <kristupas.trakselis@teltonika.lt>
Date: Fri, 3 Jan 2025 10:54:07 +0200
Subject: [PATCH] fix extended register scaler and unit reading

---
 development/include/gxobjects.h | 1 +
 development/src/gxobjects.c     | 7 ++++++-
 development/src/gxsetmalloc.c   | 1 +
 3 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/development/include/gxobjects.h b/development/include/gxobjects.h
index c879424..4e7656e 100644
--- a/development/include/gxobjects.h
+++ b/development/include/gxobjects.h
@@ -437,6 +437,7 @@ extern "C" {
         dlmsVARIANT value;
         signed char scaler;
         unsigned char unit;
+        unsigned char unitRead;
         gxtime captureTime;
         dlmsVARIANT status;
     } gxExtendedRegister;
diff --git a/development/src/gxobjects.c b/development/src/gxobjects.c
index 848ca10..87b31f6 100644
--- a/development/src/gxobjects.c
+++ b/development/src/gxobjects.c
@@ -1691,10 +1691,15 @@ int obj_getAttributeIndexToRead(gxObject* object, gxByteBuffer* ba)
     else if (object->objectType == DLMS_OBJECT_TYPE_EXTENDED_REGISTER)
     {
 #ifndef DLMS_IGNORE_EXTENDED_REGISTER
-        if (((gxExtendedRegister*)object)->unit != 0)
+        if (!((gxExtendedRegister*)object)->unitRead)
         {
             ret = bb_setUInt8(ba, 3);
         }
+        else
+        {
+            ret = 0;
+        }
+
         if (ret == 0 && (ret = bb_setUInt8(ba, 2)) == 0 &&
             (ret = bb_setUInt8(ba, 4)) == 0 &&
             (ret = bb_setUInt8(ba, 5)) == 0)
diff --git a/development/src/gxsetmalloc.c b/development/src/gxsetmalloc.c
index 67b925b..8bcd353 100644
--- a/development/src/gxsetmalloc.c
+++ b/development/src/gxsetmalloc.c
@@ -2076,6 +2076,7 @@ int cosem_setExtendedRegister(gxExtendedRegister* object, unsigned char index, d
             return ret;
         }
         object->unit = (unsigned char)var_toInteger(tmp);
+        object->unitRead = 1;
     }
     else if (index == 4)
     {
-- 
2.34.1

