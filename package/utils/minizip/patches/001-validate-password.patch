--- a/minizip.c
+++ b/minizip.c
@@ -42,7 +42,8 @@ typedef struct minizip_opt_s {
 int32_t minizip_banner(void);
 int32_t minizip_help(void);
 
-int32_t minizip_list(const char *path);
+int32_t minizip_list(const char *path, const char *password, minizip_opt *options);
+int32_t minizip_list_password_cb(void *handle, void *userdata, mz_zip_file *file_info, char *password, int32_t max_password);
 
 int32_t minizip_add_entry_cb(void *handle, void *userdata, mz_zip_file *file_info);
 int32_t minizip_add_progress_cb(void *handle, void *userdata, mz_zip_file *file_info, int64_t position);
@@ -93,7 +94,7 @@ int32_t minizip_help(void) {
 
 /***************************************************************************/
 
-int32_t minizip_list(const char *path) {
+int32_t minizip_list(const char *path, const char *password, minizip_opt *options) {
     mz_zip_file *file_info = NULL;
     uint32_t ratio = 0;
     int32_t err = MZ_OK;
@@ -107,6 +108,10 @@ int32_t minizip_list(const char *path) {
     if (!reader)
         return MZ_MEM_ERROR;
 
+    mz_zip_reader_set_password(reader, password);
+    mz_zip_reader_set_encoding(reader, options->encoding);
+    mz_zip_reader_set_password_cb(reader, options, minizip_list_password_cb);
+
     err = mz_zip_reader_open_file(reader, path);
     if (err != MZ_OK) {
         printf("Error %" PRId32 " opening archive %s\n", err, path);
@@ -114,6 +119,13 @@ int32_t minizip_list(const char *path) {
         return err;
     }
 
+    err = mz_zip_reader_entry_open(reader);
+    if (err != MZ_OK) {
+        printf("Error %" PRId32 " opening archive %s\n", err, path);
+        mz_zip_reader_delete(&reader);
+        return err;
+    }
+
     err = mz_zip_reader_goto_first_entry(reader);
 
     if (err != MZ_OK && err != MZ_END_OF_LIST) {
@@ -347,6 +359,20 @@ int32_t minizip_extract_overwrite_cb(voi
     return MZ_OK;
 }
 
+int32_t minizip_list_password_cb(void *handle, void *userdata, mz_zip_file *file_info, char *password, int32_t max_password) {
+    MZ_UNUSED(userdata);
+    MZ_UNUSED(handle);
+    MZ_UNUSED(file_info);
+    MZ_UNUSED(max_password);
+
+    if (!password || strlen(password) == 0) {
+        printf("Archive is password protected\n");
+        return MZ_PASSWORD_ERROR;
+    }
+
+    return MZ_OK;
+}
+
 int32_t minizip_extract(const char *path, const char *pattern, const char *destination, const char *password, minizip_opt *options) {
     void *reader = NULL;
     int32_t err = MZ_OK;
@@ -365,24 +391,30 @@ int32_t minizip_extract(const char *path
     mz_zip_reader_set_entry_cb(reader, options, minizip_extract_entry_cb);
     mz_zip_reader_set_progress_cb(reader, options, minizip_extract_progress_cb);
     mz_zip_reader_set_overwrite_cb(reader, options, minizip_extract_overwrite_cb);
+    mz_zip_reader_set_password_cb(reader, options, minizip_list_password_cb);
 
     err = mz_zip_reader_open_file(reader, path);
 
     if (err != MZ_OK) {
         printf("Error %" PRId32 " opening archive %s\n", err, path);
     } else {
-        /* Save all entries in archive to destination directory */
-        err = mz_zip_reader_save_all(reader, destination);
+        err = mz_zip_reader_entry_open(reader);
+        if (err != MZ_OK) {
+            printf("Error %" PRId32 " opening archive %s\n", err, path);
+        } else {
+            /* Save all entries in archive to destination directory */
+            err = mz_zip_reader_save_all(reader, destination);
 
-        if (err == MZ_END_OF_LIST) {
-            if (pattern) {
-                printf("Files matching %s not found in archive\n", pattern);
-            } else {
-                printf("No files in archive\n");
-                err = MZ_OK;
+            if (err == MZ_END_OF_LIST) {
+                if (pattern) {
+                    printf("Files matching %s not found in archive\n", pattern);
+                } else {
+                    printf("No files in archive\n");
+                    err = MZ_OK;
+                }
+            } else if (err != MZ_OK) {
+                printf("Error %" PRId32 " saving entries to disk %s\n", err, path);
             }
-        } else if (err != MZ_OK) {
-            printf("Error %" PRId32 " saving entries to disk %s\n", err, path);
         }
     }
 
@@ -641,7 +673,7 @@ int main(int argc, const char *argv[]) {
 
     if (do_list) {
         /* List archive contents */
-        err = minizip_list(path);
+        err = minizip_list(path, password, &options);
     } else if (do_extract) {
         if (argc > path_arg + 1)
             filename_to_extract = argv[path_arg + 1];
