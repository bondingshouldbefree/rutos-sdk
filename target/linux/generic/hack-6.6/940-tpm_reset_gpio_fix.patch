--- a/drivers/char/tpm/tpm_tis_i2c.c
+++ b/drivers/char/tpm/tpm_tis_i2c.c
@@ -12,6 +12,7 @@
 
 #include <linux/i2c.h>
 #include <linux/crc-ccitt.h>
+#include <linux/of_gpio.h>
 #include "tpm_tis_core.h"
 
 /* TPM registers */
@@ -332,6 +333,8 @@ static int tpm_tis_i2c_probe(struct i2c_
 	struct tpm_tis_i2c_phy *phy;
 	const u8 crc_enable = 1;
 	const u8 locality = 0;
+	struct device_node *np;
+	int gpio_num;
 	int ret;
 
 	phy = devm_kzalloc(&dev->dev, sizeof(struct tpm_tis_i2c_phy),
@@ -343,6 +346,16 @@ static int tpm_tis_i2c_probe(struct i2c_
 	if (!phy->io_buf)
 		return -ENOMEM;
 
+	np = of_find_node_by_name(NULL,"gpio_tpm_reset");
+	if (np && of_device_is_mnf_compatible(np)) {
+		gpio_num = of_get_named_gpio(np, "gpios", 0);
+		if( !gpio_is_valid(gpio_num)) return -EPROBE_DEFER;
+		if (!gpio_request(gpio_num, "tpm_reset")) {
+			gpio_free(gpio_num);
+			return -EPROBE_DEFER;
+		}
+	}
+
 	set_bit(TPM_TIS_DEFAULT_CANCELLATION, &phy->priv.flags);
 	phy->i2c_client = dev;
 
