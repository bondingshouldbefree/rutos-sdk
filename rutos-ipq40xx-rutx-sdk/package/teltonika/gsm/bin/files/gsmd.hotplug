#!/bin/sh

[ "$DEVTYPE" = usb_device ] && [ "${DEVICENAME%%:*}" = "$DEVICENAME" ] && [ -e /var/run/boot-done ] || exit 0
. /lib/functions.sh
. /usr/share/libubox/jshn.sh

json_init
json_add_string "id" "$DEVICENAME"

[ "$ACTION" = remove ] && ubus send hotplug.modem_removed "$(json_dump)" && exit 0
json_cleanup

MODEM_FOUND=""
check_modem_id() {
	[ -n "$MODEM_FOUND" ] && return

	cfg="$1"
	current_modem_id="$2"
	option="$3"

	config_get modem "$cfg" "$option" ""
	[ "$modem" = "$current_modem_id" ] && {
		MODEM_FOUND="1"
		return
	}
}

vid=$(cat /sys$DEVPATH/idVendor)
pid=$(cat /sys$DEVPATH/idProduct)
[ -f "/lib/network/wwan/$vid:$pid" ] || exit 0
usb=/lib/network/wwan/$vid:$pid
devicename="$DEVICENAME"

[ "$ACTION" = "add" ] && exit 0

json_init
json_load "$(cat $usb)"
json_get_vars desc control serial_control data_secondary boudrate stop_bits gps wdm

if ! pgrep -x "gsmd" > /dev/null; then
	found=0
	board_modem_ids=$(cat /etc/board.json | jsonfilter -e '@.modems[@.builtin=true].id')
	for board_modem_id in $board_modem_ids; do
		if [ "$devicename" = "$board_modem_id" ]; then
			found=1
			break
		fi
	done
	if [ "$found" -eq 0 ]; then
		/etc/init.d/modem_trackd start
		/etc/init.d/mobifd start
		/etc/init.d/gsmd start
	fi
fi

if [ -n "$serial_control" ]; then
	at_device="/dev/ttyS${serial_control}"
else
	at_device="/dev/$(ls -d /sys/bus/usb/devices/${devicename}:1.${control}/tty?* | sed "s/.*\///g" | tr "\n")"
fi

[ "$gps" ] && gps_device="/dev/$(ls -d /sys/bus/usb/devices/${devicename}:1.${gps}/tty?* | sed "s/.*\///g" | tr "\n")"

[ "$data_secondary" ] && data_device="/dev/$(ls -d /sys/bus/usb/devices/${devicename}:1.${data_secondary}/tty?* | sed "s/.*\///g" | tr "\n")"
if [ "$wdm" = "" ]; then
	 wdm_port="$(ls -d /sys/bus/usb/devices/${devicename}:1.${wdm}/usbmisc/* | sed "s/.*\///g" | tr "\n")"
	[ "$wdm_port" = "" ] || wdm_device="/dev/$wdm_port"
fi

[ -s /etc/config/simcard ] && {
	config_load "simcard"
	config_foreach check_modem_id sim "$devicename" modem

	[ -z "$MODEM_FOUND" ] && {
		section=$(uci -N add simcard sim)
		uci set simcard.$section.modem="$devicename"
		uci set simcard.$section.position="1"
		uci set simcard.$section.primary="1"
		uci set simcard.$section.auto_apn="1"
		uci set simcard.$section.volte="auto"
		uci commit simcard
	}
}

MODEM_FOUND=""
[ -f "/etc/config/sms_gateway" ] && {

		config_load "sms_gateway"
		config_foreach check_modem_id simman "$devicename" info_modem_id

		[ -z "$MODEM_FOUND" ] && {
			section=$(uci -N add sms_gateway simman)
			uci set sms_gateway.$section.info_modem_id="$devicename"
			uci set sms_gateway.$section.free="5"
			uci commit sms_gateway
		}
}

json_init
json_add_string "id" "$devicename"
json_add_string "cmd_port" "$at_device"
json_add_string "gps_port" "$gps_device"
[ -n "$wdm_device"] && json_add_string "wdm_port" "$wdm_device"
json_add_string "data_port" "$data_device"
json_add_string "vidpid" "$vid:$pid"
json_add_int "boudrate" "$boudrate"
json_add_int "stop_bits" "$stop_bits"

ubus send hotplug.modem_added "$(json_dump)"

exit 0
