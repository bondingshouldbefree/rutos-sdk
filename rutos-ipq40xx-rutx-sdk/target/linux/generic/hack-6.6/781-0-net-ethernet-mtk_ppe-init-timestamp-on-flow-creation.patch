New FOE entries were being created with timestamp value of 0, resulting in
incorrect idle time calculations on flows that were yet to be bound to the
hw FOE table (e.g., flows that didn't exceed minimum pps for offloading).

Initialize new FOE entries with the current timestamp to fix the issue.

--- a/drivers/net/ethernet/mediatek/mtk_ppe.c
+++ b/drivers/net/ethernet/mediatek/mtk_ppe.c
@@ -226,6 +226,7 @@ int mtk_foe_entry_prepare(struct mtk_eth
 {
 	struct mtk_foe_mac_info *l2;
 	u32 ports_pad, val;
+	u16 timestamp = mtk_eth_timestamp(eth);
 
 	memset(entry, 0, sizeof(*entry));
 
@@ -233,7 +234,8 @@ int mtk_foe_entry_prepare(struct mtk_eth
 		val = FIELD_PREP(MTK_FOE_IB1_STATE, MTK_FOE_STATE_BIND) |
 		      FIELD_PREP(MTK_FOE_IB1_PACKET_TYPE_V2, type) |
 		      FIELD_PREP(MTK_FOE_IB1_UDP, l4proto == IPPROTO_UDP) |
-		      MTK_FOE_IB1_BIND_CACHE_V2 | MTK_FOE_IB1_BIND_TTL_V2;
+		      MTK_FOE_IB1_BIND_CACHE_V2 | MTK_FOE_IB1_BIND_TTL_V2 |
+		      FIELD_PREP(MTK_FOE_IB1_BIND_TIMESTAMP_V2, timestamp);
 		entry->ib1 = val;
 
 		val = FIELD_PREP(MTK_FOE_IB2_DEST_PORT_V2, pse_port) |
@@ -244,7 +246,8 @@ int mtk_foe_entry_prepare(struct mtk_eth
 		val = FIELD_PREP(MTK_FOE_IB1_STATE, MTK_FOE_STATE_BIND) |
 		      FIELD_PREP(MTK_FOE_IB1_PACKET_TYPE, type) |
 		      FIELD_PREP(MTK_FOE_IB1_UDP, l4proto == IPPROTO_UDP) |
-		      MTK_FOE_IB1_BIND_CACHE | MTK_FOE_IB1_BIND_TTL;
+		      MTK_FOE_IB1_BIND_CACHE | MTK_FOE_IB1_BIND_TTL |
+		      FIELD_PREP(MTK_FOE_IB1_BIND_TIMESTAMP, timestamp);
 		entry->ib1 = val;
 
 		val = FIELD_PREP(MTK_FOE_IB2_DEST_PORT, pse_port) |
