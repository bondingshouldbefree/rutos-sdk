--- a/drivers/net/phy/qcom/qca807x.c
+++ b/drivers/net/phy/qcom/qca807x.c
@@ -36,6 +36,11 @@
 
 #define QCA807X_MMD7_1000BASE_T_POWER_SAVE_PER_CABLE_LENGTH	0x801a
 #define QCA807X_CONTROL_DAC_MASK				GENMASK(2, 0)
+
+#define QCA807X_MMD7_EEE_ADV                           0x3c
+#define QCA807X_MMD7_EEE_1000BT_EN                     BIT(2)
+#define QCA807X_MMD7_EEE_100BT_EN                      BIT(1)
+
 /* List of tweaks enabled by this bit:
  * - With both FULL amplitude and FULL bias current: bias current
  *   is set to half.
@@ -358,6 +363,34 @@ static int qca807x_led_blink_set(struct
 	return qca808x_led_reg_blink_set(phydev, reg, delay_on, delay_off);
 }
 
+static int qca807x_eee_config(struct phy_device *phydev)
+{
+	struct device_node *node = phydev->mdio.dev.of_node;
+	bool eee_config = false;
+	int val, en_1000, en_100;
+
+	val = phy_read_mmd(phydev, MDIO_MMD_AN, QCA807X_MMD7_EEE_ADV);
+	if (val < 0)
+		return val;
+
+	en_1000 = FIELD_GET(QCA807X_MMD7_EEE_1000BT_EN, val);
+	en_100  = FIELD_GET(QCA807X_MMD7_EEE_100BT_EN, val);
+
+	if (en_1000) {
+		val &= ~QCA807X_MMD7_EEE_1000BT_EN;
+		eee_config = true;
+	}
+	if (en_100) {
+		val &= ~QCA807X_MMD7_EEE_100BT_EN;
+		eee_config = true;
+	}
+
+	if (eee_config)
+		return phy_write_mmd(phydev, MDIO_MMD_AN, QCA807X_MMD7_EEE_ADV, val);
+	else
+		return 0;
+}
+
 #ifdef CONFIG_GPIOLIB
 static int qca807x_gpio_get_direction(struct gpio_chip *gc, unsigned int offset)
 {
@@ -762,6 +795,8 @@ static int qca807x_probe(struct phy_devi
 
 	phydev->priv = priv;
 
+	ret = qca807x_eee_config(phydev);
+
 	return 0;
 }
 
